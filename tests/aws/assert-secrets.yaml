---
apiVersion: devopstoolkitseries.com/v1alpha1
kind: ClusterClaim
metadata:
  name: (join('-', ['a-team', $cluster]))
  namespace: ($namespace)
spec:
  parameters:
    apps:
      externalSecrets:
        store: true
        awsAccessKeyIDKey: accessKeyID
        awsSecretAccessKeyKey: secretAccessKey
        secrets:
          - fromSecret: something
            toSecret: else
            toNamespace: production
          - fromSecret: registry-auth
            toSecret: push-secret
            toNamespace: production
            type: kubernetes.io/dockerconfigjson
---
apiVersion: devopstoolkitseries.com/v1alpha1
kind: CompositeCluster
metadata:
  labels:
    crossplane.io/claim-name: (join('-', ['a-team', $cluster]))
spec:
  parameters:
    apps:
      externalSecrets:
        store: true
        awsAccessKeyIDKey: accessKeyID
        awsSecretAccessKeyKey: secretAccessKey
        secrets:
          - fromSecret: something
            toSecret: else
            toNamespace: production
          - fromSecret: registry-auth
            toSecret: push-secret
            toNamespace: production
  (resourceRefs[?name == join('-', ['a-team', $cluster, 'secret-else'])]):
  - apiVersion: kubernetes.crossplane.io/v1alpha2
    kind: Object
  (resourceRefs[?name == join('-', ['a-team', $cluster, 'secret-push-secret'])]):
  - apiVersion: kubernetes.crossplane.io/v1alpha2
    kind: Object
  (resourceRefs[?name == join('-', ['a-team', $cluster, 'app-secret-store'])]):
  - apiVersion: kubernetes.crossplane.io/v1alpha2
    kind: Object
---
apiVersion: kubernetes.crossplane.io/v1alpha2
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: (join('-', ['a-team', $cluster, 'app-secret-store']))
    crossplane.io/external-name: ($hyperscaler)
  name: (join('-', ['a-team', $cluster, 'app-secret-store']))
spec:
  forProvider:
    manifest:
      apiVersion: external-secrets.io/v1beta1
      kind: ClusterSecretStore
      metadata:
        name: ($hyperscaler)
      spec:
        provider:
          aws:
            service: SecretsManager
            region: us-east-1
            auth:
              secretRef:
                accessKeyIDSecretRef:
                  name: aws-creds
                  key: accessKeyID
                  namespace: crossplane-system
                secretAccessKeySecretRef:
                  name: aws-creds
                  key: secretAccessKey
                  namespace: crossplane-system
  providerConfigRef:
    name: a-team-eks
---
apiVersion: kubernetes.crossplane.io/v1alpha2
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: (join('-', ['a-team', $cluster, 'secret-else']))
    crossplane.io/external-name: else
  name: (join('-', ['a-team', $cluster, 'secret-else']))
spec:
  forProvider:
    manifest:
      apiVersion: external-secrets.io/v1beta1
      kind: ExternalSecret
      metadata:
        name: else
        namespace: production
      spec:
        refreshInterval: 1h
        secretStoreRef:
          kind: ClusterSecretStore
          name: aws
        target:
          name: else
          creationPolicy: Owner
          template:
            type: Opaque
        dataFrom:
        - extract:
            key: something
  providerConfigRef:
    name: a-team-eks
---
apiVersion: kubernetes.crossplane.io/v1alpha2
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: (join('-', ['a-team', $cluster, 'secret-push-secret']))
    crossplane.io/external-name: push-secret
  name: (join('-', ['a-team', $cluster, 'secret-push-secret']))
spec:
  forProvider:
    manifest:
      apiVersion: external-secrets.io/v1beta1
      kind: ExternalSecret
      metadata:
        name: push-secret
        namespace: production
      spec:
        refreshInterval: 1h
        secretStoreRef:
          kind: ClusterSecretStore
          name: ($hyperscaler)
        target:
          name: push-secret
          creationPolicy: Owner
          template:
            type: kubernetes.io/dockerconfigjson
        dataFrom:
        - extract:
            key: registry-auth
  providerConfigRef:
    name: a-team-eks